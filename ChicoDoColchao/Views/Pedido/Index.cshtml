@model ChicoDoColchao.Dao.PedidoDao

@{
    ViewBag.Title = "Pedido - Cadastro";
}
@section styles
{

}
@section scripts
{
    <script type="text/javascript">
        
        function calcularTotalPago() {

            var totalPago = 0;
            var tbPagamentos = $("#tbTipoPagamento").DataTable();

            if (tbPagamentos.rows().count() <= 0) {
                $("#lblTotalPago").html(Globalize.format(totalPago, "n2"));
                return;
            }

            $(".parcela").each(function (index, element) {
                var parcela = $(element).val();
                var tr = $(element).parents("tr");
                var valorPago = Globalize.parseFloat($(tr).children().eq(2).children().val().trim());
                if (isNaN(valorPago)) {
                    valorPago = 0;
                }
                totalPago += parseInt(parcela) * valorPago;
            });

            if (!isNaN(totalPago)) {
                $("#lblTotalPago").html(Globalize.format(totalPago, "n2"));
            }
        }

        function calcularTotalPedido() {

            var totalPedido = 0;
            var tbProdutos = $("#tbProduto").DataTable();

            if (tbProdutos.rows().count() <= 0) {
                $("#lblTotalPedido").html(Globalize.format(totalPedido, "n2"));
                return;
            }

            $(".quantidade").each(function (index, element) {
                var quantidade = $(element).val();
                var tr = $(element).parents("tr");
                var preco = Globalize.parseFloat($(tr).children().eq(4).text().trim());
                if (isNaN(preco)) {
                    preco = 0;
                }
                totalPedido += parseInt(quantidade) * preco;
            });

            if (!isNaN(totalPedido)) {
                $("#lblTotalPedido").html(Globalize.format(totalPedido, "n2"));
            }
        }

        function calcularPrecoProduto() {

            var parcelaID = 1;

            $(".parcela").each(function (index, element) {
                if (parseInt($(element).val()) > parcelaID) {
                    parcelaID = $(element).val();
                }
            });

            if (parcelaID <= 0) {
                return;
            }

            var produtosDao = [];
            var tbProdutos = $("#tbProduto").DataTable();

            if (tbProdutos.rows().count() <= 0) {
                return;
            }

            tbProdutos.rows().every(function (rowIdx, tableLoop, rowLoop) {
                produtosDao.push({ "ProdutoID": this.data().ProdutoID });
            });

            $.ajax({
                type: "POST",
                url: "/Produto/ListarPreco/",
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ 'produtosDao': produtosDao }),
                success: function (data) {
                    // atualiza somente o preço do produto
                    $(data).each(function (index, produto) {
                        tbProdutos.cell($(".preco").parent("td")[index]).data("<span class='preco'>" + Globalize.format(produto.ParcelaProdutoDao[parcelaID - 1].Preco, "n2") + "</span>");
                    });
                    // atualiza o total do pedido
                    calcularTotalPedido();
                }
            });
        };

        $(document).ready(function () {

            var parcelas;

            $.getJSON("/Parcela/Listar", function (data, status, xhr) {
                parcelas = data;
            });

            $("#TipoPagamentoID").change(function () {

                var tipoPagamentoID = parseInt($(this).val());
                var tipoPagamentoAdicionadoAoPedido = false;
                var parcela = "";

                if (isNaN(tipoPagamentoID)) {
                    return;
                }

                parcela += "<select name='ParcelaID' class='form-control parcela' onchange='calcularPrecoProduto(); calcularTotalPago();'><option value='0'>Qtd</option>";
                $(parcelas).each(function (index, element) {
                    parcela += "<option value='" + element.ParcelaID + "'>" + element.Numero + "</option>"
                });
                parcela += '</select>';

                // verifica se o tipo de pagamento selecionado já existe no pedido
                tbTipoPagamento.rows().every(function (rowIdx, tableLoop, rowLoop) {
                    var data = this.data();
                    if (data.TipoPagamentoID == tipoPagamentoID) {
                        tipoPagamentoAdicionadoAoPedido = true;
                    }
                });

                if (!tipoPagamentoAdicionadoAoPedido) {

                    // adiciona pagamento
                    tbTipoPagamento.rows.add([
                    {
                        "TipoPagamentoID": tipoPagamentoID,
                        "Descricao": $(this).find(":selected").text(),
                        "ParcelaID": parcela,
                        "ValorPago": "<input name='ValorPago' type='text' class='form-control valorPago valor' onblur='calcularTotalPago()' />",
                        "Acao": "<i class='glyphicon glyphicon-remove' title='Excluir Tipo Pagamento' style='cursor: pointer'></i>"
                    }]).draw();

                    $(".valor").mask('000.000.000,00', { reverse: true });
                }
            });

            $("#txtProduto").autocomplete({
                minLength: 3,
                source: function (request, response) {
                    $.getJSON("/Produto/ListarAutocomplete", { term: request.term }, function (data, status, xhr) {
                        response($.map(data, function (produto) {
                            return { label: produto.Numero + ' | ' + produto.Descricao + ' | ' + produto.MedidaDao.Descricao + ' | ' + Globalize.format(produto.ParcelaProdutoDao[0].Preco, "n2") + ' (à vista)', value: produto.ProdutoID }
                        }));
                    });
                },
                select: function (event, ui) {

                    var produto = ui.item.label.split("|");
                    var produtoAdicionadoAoPedido = false;

                    // verifica se o produto selecionado já existe no pedido
                    tbProduto.rows().every(function (rowIdx, tableLoop, rowLoop) {
                        var data = this.data();
                        if (data.ProdutoID == ui.item.value) {
                            produtoAdicionadoAoPedido = true;
                        }
                    });

                    if (produtoAdicionadoAoPedido) {
                        ui.item.label = "";
                        ui.item.value = "";
                        alert('Produto ' + produto[0].trim() + ' já adicionado ao pedido.');
                        return;
                    }

                    // adiciona o produto ao pedido
                    tbProduto.rows.add([
                    {
                        "ProdutoID": ui.item.value,
                        "Numero": produto[0].trim(),
                        "Descricao": produto[1].trim(),
                        "MedidaDao":
                        {
                            "Descricao": produto[2].trim()
                        },
                        "Quantidade": "<input type='text' class='form-control quantidade' min='0' onblur='calcularTotalPedido()' value='1' />",
                        "Preco": "<span class='preco'>" + Globalize.format(produto[3].trim(), "n2") + "</span>",
                        "Acao": "<i class='glyphicon glyphicon-remove' title='Excluir Produto' style='cursor: pointer'></i>"
                    }]).draw();

                    calcularPrecoProduto();

                    // apaga a pesquisa do produto selecionado
                    ui.item.label = "";
                    ui.item.value = "";
                }
            });

            var tbProduto = $("#tbProduto").DataTable({
                "paging": false,
                "ordering": false,
                "info": false,
                "searching": false,
                /*"sAjaxSource": "/Produto/Listar",
                "fnServerParams": function (aoData) {
                    aoData.push({ "name": "term", "value": "" });
                },*/
                "language": {
                    "lengthMenu": "Mostrar _MENU_ registros por página",
                    "zeroRecords": "Sem registros a serem exibidos",
                    "info": "Mostrando página _PAGE_ de _PAGES_",
                    "infoEmpty": "Sem registros a serem exibidos",
                    "infoFiltered": "(filtrados de _MAX_ total de registros)"
                },
                "columns":
                [
                    { "data": "Numero", "className": "text-left" },
                    { "data": "Descricao", "className": "text-left" },
                    { "data": "MedidaDao.Descricao", "className": "text-center" },
                    { "data": "Quantidade", "className": "text-center" },
                    { "data": "Preco", "className": "text-center" },
                    { "data": "Acao", "className": "text-center" }
                ]
            });

            var tbTipoPagamento = $("#tbTipoPagamento").DataTable({
                "paging": false,
                "ordering": false,
                "info": false,
                "searching": false,
                "language": {
                    "lengthMenu": "Mostrar _MENU_ registros por página",
                    "zeroRecords": "Sem registros a serem exibidos",
                    "info": "Mostrando página _PAGE_ de _PAGES_",
                    "infoEmpty": "Sem registros a serem exibidos",
                    "infoFiltered": "(filtrados de _MAX_ total de registros)"
                },
                "columns":
                [
                    { "data": "TipoPagamentoID", "className": "text-left", "visible": false },
                    { "data": "Descricao", "className": "text-left" },
                    { "data": "ParcelaID", "className": "text-center" },
                    {
                        "data": "ValorPago",
                        //render: function (data, type, row) {
                        //    if (type === 'display')
                        //    {
                        //        return "<input name='ValorPago' type='text' class='form-control valor' />";
                        //    }
                        //    return data;
                        //},
                        "className": "text-center"
                    },
                    { "data": "Acao", "className": "text-center" }

                ]
            });

            // botão excluir produto do pedido
            $('#tbProduto tbody').on('click', 'i.glyphicon-remove', function () {
                if (confirm("Deseja realmente excluir produto do pedido?")) {
                    tbProduto.row($(this).parents('tr')).remove().draw();
                    calcularTotalPedido();
                }
            });

            // botão excluir tipo pagamento do pedido
            $('#tbTipoPagamento tbody').on('click', 'i.glyphicon-remove', function () {
                if (confirm("Deseja realmente excluir tipo de pagamento do pedido?")) {
                    tbTipoPagamento.row($(this).parents('tr')).remove().draw();
                    calcularPrecoProduto();
                    calcularTotalPago();
                }
            });

            var validator = $("#PedidoForm").validate({
                rules: {
                    Numero: { required: true, digits: true },
                    FuncionarioID: { required: true },
                    ClienteID: { required: true },
                    LojaID: { required: true },
                    PedidoStatusID: { required: true }//,
                    //txtProduto: { required: true },
                    //TipoPagamentoID: { required: true },
                    //ParcelaID: { required: true }
                }
            });

            $("#btnIncluirPedido").click(function () {

                //if (!validarDataPtBr("DataEntrega")) {
                //    return;
                //}

                if ($("#PedidoForm").valid()) {

                    var pedidoDao = {};
                    var produtos = [];
                    var pagamentos = [];

                    pedidoDao.Numero = $("#Numero").val();
                    pedidoDao.FuncionarioDao = [];
                    pedidoDao.FuncionarioDao.push({ FuncionarioID: $("#FuncionarioID option:selected").val() });
                    pedidoDao.ClienteDao = [];
                    pedidoDao.ClienteDao.push({ ClienteID: $("#ClienteID option:selected").val() });
                    pedidoDao.LojaSaidaDao = [];
                    pedidoDao.LojaSaidaDao.push({ LojaID: $("#LojaID option:selected").val() });
                    pedidoDao.PedidoStatusDao = [];
                    pedidoDao.PedidoStatusDao.push({ PedidoStatusID: $("#PedidoStatusID option:selected").val() });
                    pedidoDao.DataEntrega = Globalize.parseDate($("#DataEntrega").val());
                    pedidoDao.NomeCarreto = $("#NomeCarreto").val();
                    pedidoDao.ValorFrete = $("#ValorFrete").val().trim() != "" ? $("#ValorFrete").val() : 0;
                    pedidoDao.Observacao = $("#Observacao").val();

                    // produtos
                    tbProduto.rows().every(function (rowIdx, tableLoop, rowLoop) {
                        var data = this.data();
                        produtos.push
                        ({
                            "ProdutoID": data.ProdutoID,
                            "Quantidade": Globalize.parseInt($($($(".quantidade")[rowIdx]).parents("tr").children().eq(3)).children().val()),
                            "Preco": $($($(".preco")[rowIdx]).parents("tr").children().eq(4)).text()
                        });
                    });

                    pedidoDao.PedidoProdutoDao = produtos;

                    // pagamentos
                    tbTipoPagamento.rows().every(function (rowIdx, tableLoop, rowLoop) {
                        var data = this.data();
                        pagamentos.push
                        ({
                            "TipoPagamentoDao.TipoPagamentoID": data.TipoPagamentoID,
                            "ParcelaDao.ParcelaID": $($($(".parcela")[rowIdx]).parents("tr").children()).find(":selected").text(),
                            "ValorPago": $($($(".valorPago")[rowIdx]).parents("tr").children().eq(2)).children().val()
                        });
                    });

                    pedidoDao.PedidoTipoPagamentoDao = pagamentos;

                    //console.info(pedidoDao);

                    $.ajax({
                        dataType: "json",
                        type: "POST",
                        url: "/Pedido/Incluir",
                        data: { pedidoDao: pedidoDao },
                        success: function (data) {

                            if (!data.Sucesso) {
                                alert(data.Mensagem);
                                return;
                            }

                            $("#PedidoForm")[0].reset();
                            validator.resetForm();
                            tbProduto.clear().draw();
                            tbTipoPagamento.clear().draw();
                            //$("#ValorFrete").val("");
                            $("#lblTotalPedido").html("0,00");
                            $("#lblTotalPago").html("0,00");

                            alert(data.Mensagem);
                        }
                    });
                }
            });

        });
    </script>
}
<h2><i class="glyphicon glyphicon-shopping-cart" style="color: #660033" title="Pedido"></i> Pedido</h2>
<hr />
@using (Html.BeginForm("Incluir", "Pedido", FormMethod.Post, new { id = "PedidoForm" }))
{
    <div class="row">
        <div class="col-lg-4">
            <div class="form-group">
                @Html.TextBoxFor(x => x.Numero, new { @class = "form-control", @placeholder = "Número do pedido" })
            </div>
            <div class="form-group">
                @Html.DropDownListFor(x => x.FuncionarioDao.FirstOrDefault().FuncionarioID, new SelectList(Model.FuncionarioDao, "FuncionarioID", "Nome"), "Funcionário", new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.DropDownListFor(x => x.ClienteDao.FirstOrDefault().ClienteID, new SelectList(Model.ClienteDao, "ClienteID", "Nome"), "Cliente", new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.DropDownListFor(x => x.LojaSaidaDao.FirstOrDefault().LojaID, new SelectList(Model.LojaSaidaDao, "LojaID", "NomeFantasia"), "Loja de saída dos produtos", new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.DropDownListFor(x => x.PedidoStatusDao.FirstOrDefault().PedidoStatusID, new SelectList(Model.PedidoStatusDao, "PedidoStatusID", "Descricao"), "Status do pedido", new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.TextBoxFor(x => x.DataEntrega, new { @class = "form-control data datepicker", @placeholder = "Data da entrega" })
            </div>
            <div class="form-group">
                @Html.TextBoxFor(x => x.NomeCarreto, new { @class = "form-control", @placeholder = "Nome do carreto" })
            </div>
            <div class="form-group">
                @Html.TextBoxFor(x => x.ValorFrete, new { @class = "form-control valor", @placeholder = "Valor do frete" })
            </div>
        </div>
        <div class="col-lg-8">
            <label style="font-size: 24px; margin-bottom: 10px; font-weight: normal">Produtos</label>
            <input id="txtProduto" name="txtProduto" type="text" class="form-control" placeholder="Digite os produtos a serem inseridos no pedido (Mínimo de 3 letras)" />
            <div class="table-responsive">
                <table id="tbProduto" class="table table-striped table-responsive table-condensed">
                    <thead>
                        <tr>
                            <td class="text-left" style="width: 15%"><b>Número</b></td>
                            <td class="text-left" style="width: 35%"><b>Descrição</b></td>
                            <td class="text-center" style="width: 15%"><b>Medida</b></td>
                            <td class="text-center" style="width: 10%"><b>Qtd</b></td>
                            <td class="text-center" style="width: 15%"><b>Preço</b></td>
                            <td class="text-center" style="width: 10%"><b>Ação</b></td>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
            <h3>Pagamentos</h3>
            @Html.DropDownListFor(x => x.TipoPagamentoDao.FirstOrDefault().TipoPagamentoID, new SelectList(Model.TipoPagamentoDao, "TipoPagamentoID", "Descricao"), "Tipo de pagamento", new { @class = "form-control" })
            <div class="table-responsive">
                <table id="tbTipoPagamento" class="table table-striped table-responsive table-condensed">
                    <thead>
                        <tr>
                            <td></td>
                            <td class="text-left" style="width: 55%"><b>Descrição</b></td>
                            <td class="text-center" style="width: 15%"><b>Parcelas</b></td>
                            <td class="text-center" style="width: 20%"><b>Valor Pago</b></td>
                            <td class="text-center" style="width: 10%"><b>Ação</b></td>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
            <h3 class="text-right">Total Pedido: <label id="lblTotalPedido" style="color: cornflowerblue">0,00</label></h3>
            <h3 class="text-right">Total Pago: <label id="lblTotalPago" style="color: seagreen">0,00</label></h3>
        </div>
    </div>
    <div class="form-group">
        @Html.TextAreaFor(x => x.Observacao, 5, 10, new { @class = "form-control", @placeholder = "Observação" })
    </div>
    <div class="form-group">
        <button id="btnIncluirPedido" type="button" class="btn btn-success">Incluir Pedido</button>
    </div>
}
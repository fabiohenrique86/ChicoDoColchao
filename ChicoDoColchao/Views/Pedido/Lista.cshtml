@using ChicoDoColchao.Dao;
@using Newtonsoft.Json;

@model PedidoDao

@{
    ViewBag.Title = "Pedido - Lista";

    UsuarioDao usuarioDao = null;
    if (Request.Cookies.Get("ChicoDoColchao_Usuario") != null)
    {
        usuarioDao = JsonConvert.DeserializeObject<UsuarioDao>(Request.Cookies.Get("ChicoDoColchao_Usuario").Value);
    }
}
<style type="text/css">
    .ui-autocomplete {
        z-index: 2147483647;
    }
</style>
@section scripts
{
    <script type="text/javascript">

        function modalAlterarDataEntrega(pedidoProduto) {

            $("#lblProdutoID").text(pedidoProduto.ProdutoID);
            $("#lblNumero").text(pedidoProduto.ProdutoDao.Numero);
            if (pedidoProduto.DataEntrega == null) {
                $("#txtDataEntregaAntiga").val("Sem Data Programada");
            }
            else {
                $("#txtDataEntregaAntiga").val(moment(pedidoProduto.DataEntrega).format("DD/MM/YYYY"));
            }

            $('#modalAlterarDataEntrega').modal('show');
        }

        function modalPedido(pedido) {

            if (pedido.PedidoTrocaID != null && pedido.PedidoTrocaID > 0)
            {
                $("#lblPedido").text("Pedido de Troca");
            }
            else
            {
                $("#lblPedido").text("Pedido");
            }

            $("#lblPedidoID").text(pedido.PedidoID);
            $("#lblPedidoStatusID").text(pedido.PedidoStatusDao[0].PedidoStatusID);

            $("#lblPedidoStatus").text(pedido.PedidoStatusDao[0].Descricao);
            $("#lblValorFrete").text((pedido.ValorFrete != null ? Globalize.format(pedido.ValorFrete, "n2") : ""));
            $("#lblTotalDesconto").text((pedido.Desconto != null ? Globalize.format(pedido.Desconto, "n2") : ""));
            $("#lblObservacao").text((pedido.Observacao != null ? pedido.Observacao : ""));

            $("#tbProduto").DataTable().clear();
            $("#tbProduto").DataTable().rows.add(pedido.PedidoProdutoDao).draw();

            $("#tbTipoPagamento").DataTable().clear();
            $("#tbTipoPagamento").DataTable().rows.add(pedido.PedidoTipoPagamentoDao).draw();

            var totalPedido = 0;
            $(pedido.PedidoTipoPagamentoDao).each(function (index, pedidoTipoPagamento) {
                totalPedido += pedidoTipoPagamento.ValorPago;
            });

            $("#lblTotalPedido").text(Globalize.format(totalPedido, "n2"));

            $('#modalpedido').modal('show');
        }

        function cancelarPedido(pedidoId, obj) {
            if (confirm("Deseja realmente cancelar pedido " + pedidoId + "?")) {
                var pedidoDao = {};

                pedidoDao.PedidoID = pedidoId;
                pedidoDao.UsuarioCancelamentoDao = { UsuarioID: '@usuarioDao.UsuarioID' };
                pedidoDao.PedidoStatusDao = [];
                pedidoDao.PedidoStatusDao.push({ PedidoStatusID: '@PedidoStatusDao.EPedidoStatus.Cancelado.GetHashCode()' });

                $.ajax({
                    dataType: "json",
                    type: "POST",
                    url: "/Pedido/Cancelar",
                    data: { pedidoDao: pedidoDao },
                    success: function (data) {

                        if (!data.Sucesso) {
                            alert(data.Mensagem);
                            return;
                        }

                        $("#tbPedido").DataTable().row($(obj).parents("tr")).invalidate().data(data.Pedido).draw();
                    }
                });
            }
        }

        function darBaixaProduto(pedidoProduto) {
            if (confirm("Deseja realmente dar baixa do produto " + pedidoProduto.ProdutoDao.Numero + "?")) {
                var pedidoDao = {};

                pedidoDao.PedidoID = pedidoProduto.PedidoID;
                pedidoDao.PedidoProdutoDao = [];
                pedidoDao.PedidoProdutoDao.push({ "PedidoID": pedidoProduto.PedidoID, "ProdutoID": pedidoProduto.ProdutoDao.ProdutoID, "Quantidade": pedidoProduto.Quantidade, "UsuarioBaixaDao.UsuarioID": '@usuarioDao.UsuarioID' });
                pedidoDao.PedidoStatusDao = [];
                pedidoDao.PedidoStatusDao.push({ PedidoStatusID: '@PedidoStatusDao.EPedidoStatus.Entregue.GetHashCode()' });

                var lojaSaidaId = 0;
                $("#tbPedido").DataTable().rows().every(function (rowIdx, tableLoop, rowLoop) {
                    var data = this.data();
                    if (data.PedidoID == pedidoDao.PedidoID) { lojaSaidaId = data.LojaSaidaDao[0].LojaID; }
                });
                pedidoDao.LojaSaidaDao = [];
                pedidoDao.LojaSaidaDao.push({ LojaID: lojaSaidaId });

                $.ajax({
                    dataType: "json",
                    type: "POST",
                    url: "/Pedido/DarBaixa",
                    data: { pedidoDao: pedidoDao },
                    success: function (data) {
                        if (!data.Sucesso) {
                            alert(data.Mensagem);
                            return;
                        }

                        $("#tbProduto").DataTable().clear();
                        $("#tbProduto").DataTable().rows.add(data.Pedido.PedidoProdutoDao).draw();

                        var idxPedido;
                        $("#tbPedido").DataTable().rows().every(function (rowIdx, tableLoop, rowLoop) {
                            var json = this.data();
                            if (json.PedidoID == data.Pedido.PedidoID) {
                                idxPedido = rowIdx;
                            }
                        });
                        $("#tbPedido").DataTable().row(idxPedido).invalidate().data(data.Pedido).draw();
                    }
                });
            }
        }

        function enviarComandaPorEmail(pedidoId) {

            if (confirm("Deseja realmente enviar por e-mail a comanda do pedido " + pedidoId + "?")) {

                var pedidoDao = {};

                pedidoDao.PedidoID = pedidoId;

                $.ajax({
                    dataType: "json",
                    type: "POST",
                    url: "/Pedido/EnviarComandaPorEmail",
                    data: { pedidoDao: pedidoDao },
                    success: function (data) {

                        if (!data.Sucesso) {
                            alert(data.Mensagem);
                            return;
                        }

                        alert(data.Mensagem);
                    }
                });
            }
        }

        $(document).ready(function () {

            $.getJSON("/Pedido/Listar", { top: true, take: 50 }, function (data) {
                if (!data.Sucesso) {
                    console.info(data.Erro);
                    alert(data.Mensagem);
                    return;
                }

                tbPedido.clear();
                tbPedido.rows.add(data.Pedidos).draw();
            });

            var tbPedido = $("#tbPedido").DataTable({
                "ordering": false,
                "bFilter": false,
                "pageLength": 10,
                "language": {
                    "lengthMenu": "_MENU_ registros por página",
                    "zeroRecords": "Sem registros a serem exibidos",
                    "info": "Página _PAGE_ de _PAGES_",
                    "infoEmpty": "Sem registros a serem exibidos",
                    "infoFiltered": "(filtrados de _MAX_ total de registros)",
                    "sSearch": "Pesquisar",
                    "oPaginate": { "sNext": "Próximo", "sPrevious": "Anterior", "sFirst": "Primeiro", "sLast": "Último" }
                },
                "rowCallback": function (row, data, index) {
                    var pedidoStatusId = data.PedidoStatusDao[0].PedidoStatusID;

                    if (pedidoStatusId == '@PedidoStatusDao.EPedidoStatus.PrevisaoDeEntrega.GetHashCode()') {
                        $('td', row).removeClass('bg-success');
                        $('td', row).removeClass('bg-danger');
                        $('td', row).addClass('bg-warning');
                    }
                    else if (pedidoStatusId == '@PedidoStatusDao.EPedidoStatus.RetiradoNaLoja.GetHashCode()') {
                        $('td', row).removeClass('bg-warning');
                        $('td', row).removeClass('bg-danger');
                        $('td', row).addClass('bg-success');
                    }
                    else if (pedidoStatusId == '@PedidoStatusDao.EPedidoStatus.Cancelado.GetHashCode()') {
                        $('td', row).removeClass('bg-warning');
                        $('td', row).removeClass('bg-success');
                        $('td', row).addClass('bg-danger');
                    }
                    else if (pedidoStatusId == '@PedidoStatusDao.EPedidoStatus.Entregue.GetHashCode()') {
                        $('td', row).removeClass('bg-warning');
                        $('td', row).removeClass('bg-danger');
                        $('td', row).addClass('bg-success');
                    }
                    else {
                        $('td', row).removeClass('bg-success');
                        $('td', row).removeClass('bg-warning');
                        $('td', row).removeClass('bg-danger');
                        $('td', row).addClass('bg-secondary');
                    }
                },
                "columns":
                [
                    {
                        "data": function (data, type, row) {
                            return "<a href='#' onclick='modalPedido(" + JSON.stringify(data) + ")'>" + data["PedidoID"] + "</a>";
                        },
                        "className": "text-center"
                    },
                    { "data": "ConsultorDao[0].Nome", "className": "text-center" },
                    {
                        "data": function (data, type, row) {
                            if (data.ClienteDao[0].Cpf != "") { return data.ClienteDao[0].Nome; } else { return data.ClienteDao[0].NomeFantasia; }
                        },
                        "className": "text-center"
                    },
                    {
                        "data": function (data, type, row) {
                            return moment(data["DataPedido"]).format("DD/MM/YYYY HH:mm");
                        },
                        "className": "text-center"
                    },
                    { "data": "LojaDao[0].NomeFantasia", "className": "text-center" },
                    { "data": "LojaSaidaDao[0].NomeFantasia", "className": "text-center" },
                    {
                        "data": function (data, type, row) {
                            var comanda = "<a href='" + window.location.origin + "/Pedido/Comanda?PedidoID=" + data["PedidoID"] + "' target='_blank'><i class='glyphicon glyphicon-print' title='Imprimir Pedido' style='cursor: pointer; color: #333'></i></a>";
                            var cancelamento = "<i class='glyphicon glyphicon-remove' title='Cancelar Pedido' style='cursor: pointer' onclick='cancelarPedido(" + data["PedidoID"] + ", this)'></i>";
                            var comandaPorEmail = "<i class='glyphicon glyphicon-envelope' title='Enviar Comanda Por E-mail' style='cursor: pointer' onclick='enviarComandaPorEmail(" + data["PedidoID"] + ")'></i>";
                            var desconto = data["Desconto"] > 0 ? "<i class='glyphicon glyphicon-usd' title='Desconto (R$ " + Globalize.format(data["Desconto"], "n2") + ")'></i>" : "";
                            var troca = "<a href='" + window.location.origin + "/Pedido/Troca?PedidoID=" + data["PedidoID"] + "'><i class='glyphicon glyphicon-retweet' title='Trocar Pedido' style='cursor: pointer; color: #333'></i></a>";

                            if (data.PedidoStatusDao[0].PedidoStatusID == '@PedidoStatusDao.EPedidoStatus.PrevisaoDeEntrega.GetHashCode()') {
                                return comanda + " " + cancelamento + " " + comandaPorEmail + " " + desconto + " " + troca;
                            }
                            else if (data.PedidoStatusDao[0].PedidoStatusID == '@PedidoStatusDao.EPedidoStatus.RetiradoNaLoja.GetHashCode()') {
                                return comanda + " " + cancelamento + " " + comandaPorEmail + " " + desconto + " " + troca;
                            }
                            else if (data.PedidoStatusDao[0].PedidoStatusID == '@PedidoStatusDao.EPedidoStatus.Cancelado.GetHashCode()') {
                                return desconto;
                            }
                            else if (data.PedidoStatusDao[0].PedidoStatusID == '@PedidoStatusDao.EPedidoStatus.Entregue.GetHashCode()') {
                                return comanda + " " + cancelamento + " " + comandaPorEmail + " " + desconto + " " + troca;
                            }
                            else {
                                return "";
                            }
                        },
                        "className": "text-center"
                    }
                ]
            });

            var tbProduto = $("#tbProduto").DataTable({
                "paging": false,
                "ordering": false,
                "info": false,
                "searching": false,
                "language": {
                    "lengthMenu": "Mostrar _MENU_ registros por página",
                    "zeroRecords": "Sem registros a serem exibidos",
                    "info": "Mostrando página _PAGE_ de _PAGES_",
                    "infoEmpty": "Sem registros a serem exibidos",
                    "infoFiltered": "(filtrados de _MAX_ total de registros)"
                },
                "rowCallback": function (row, data, index) {
                    var pedidoStatusId = $("#lblPedidoStatusID").text();

                    if (pedidoStatusId == '@PedidoStatusDao.EPedidoStatus.PrevisaoDeEntrega.GetHashCode()') {
                        if (data.UsuarioBaixaDao != null && data.UsuarioBaixaDao.UsuarioID > 0) {
                            $('td', row).removeClass('bg-warning');
                            $('td', row).removeClass('bg-danger');
                            $('td', row).addClass('bg-success');
                        }
                        else {
                            $('td', row).removeClass('bg-success');
                            $('td', row).removeClass('bg-danger');
                            $('td', row).addClass('bg-warning');
                        }
                    }
                    else if (pedidoStatusId == '@PedidoStatusDao.EPedidoStatus.RetiradoNaLoja.GetHashCode()') {
                        $('td', row).removeClass('bg-warning');
                        $('td', row).removeClass('bg-danger');
                        $('td', row).addClass('bg-success');
                    }
                    else if (pedidoStatusId == '@PedidoStatusDao.EPedidoStatus.Cancelado.GetHashCode()') {
                        $('td', row).removeClass('bg-warning');
                        $('td', row).removeClass('bg-success');
                        $('td', row).addClass('bg-danger');
                    }
                    else if (pedidoStatusId == '@PedidoStatusDao.EPedidoStatus.Entregue.GetHashCode()') {
                        $('td', row).removeClass('bg-warning');
                        $('td', row).removeClass('bg-danger');
                        $('td', row).addClass('bg-success');
                    }
                    else
                    {
                        if (data.UsuarioTrocaDao != null && data.UsuarioTrocaDao.UsuarioID > 0) {
                            $('td', row).removeClass('bg-success');
                            $('td', row).removeClass('bg-warning');
                            $('td', row).removeClass('bg-danger');
                            $('td', row).addClass('bg-secondary');
                        }
                        else if (data.UsuarioBaixaDao != null && data.UsuarioBaixaDao.UsuarioID > 0)
                        {
                            $('td', row).addClass('bg-success');
                            $('td', row).removeClass('bg-warning');
                            $('td', row).removeClass('bg-danger');
                            $('td', row).removeClass('bg-secondary');
                        }
                        else
                        {
                            $('td', row).removeClass('bg-success');
                            $('td', row).addClass('bg-warning');
                            $('td', row).removeClass('bg-danger');
                            $('td', row).removeClass('bg-secondary');
                        }
                    }
                },
                "columns":
                [
                    { "data": "ProdutoDao.ProdutoID", "className": "text-center", "visible": false },
                    { "data": "ProdutoDao.Numero", "className": "text-center" },
                    { "data": "ProdutoDao.Descricao", "className": "text-center" },
                    { "data": "ProdutoDao.MedidaDao.Descricao", "className": "text-center" },
                    { "data": "Quantidade", "className": "text-center" },
                    { "data": "ProdutoDao.CategoriaDao[0].Descricao", "className": "text-center" },
                    {
                        "data": function (data, type, row)
                        {
                            var pedidoStatusId = $("#lblPedidoStatusID").text();
                            var calendario = "<i class='glyphicon glyphicon-calendar' title='Alterar Data Entrega' style='cursor: pointer' onclick='modalAlterarDataEntrega(" + JSON.stringify(data) + ")'></i>";
                            var programada = "Programada para " + moment(data.DataEntrega).format("DD/MM/YYYY");

                            if (pedidoStatusId == '@PedidoStatusDao.EPedidoStatus.PrevisaoDeEntrega.GetHashCode()')
                            {
                                if (data.UsuarioEntregaDao == null || data.UsuarioEntregaDao.UsuarioID <= 0)
                                {
                                    return calendario;
                                }
                                else
                                {
                                    if (data.UsuarioBaixaDao == null || data.UsuarioBaixaDao.UsuarioID <= 0)
                                    {
                                        return programada + " " + calendario;
                                    }
                                    else
                                    {
                                        return programada;
                                    }
                                }
                            }
                            else if (pedidoStatusId == '@PedidoStatusDao.EPedidoStatus.Entregue.GetHashCode()')
                            {
                                return programada;
                            }
                            else
                            {
                                return data.DataEntrega != null ? moment(data.DataEntrega).format("DD/MM/YYYY") : "";
                            }
                        },
                        "className": "text-center"
                    },
                    {
                        "data": function (data, type, row)
                        {
                            var pedidoStatusId = $("#lblPedidoStatusID").text();

                            if (pedidoStatusId == '@PedidoStatusDao.EPedidoStatus.PrevisaoDeEntrega.GetHashCode()')
                            {
                                if (data.UsuarioBaixaDao == null || data.UsuarioBaixaDao.UsuarioID <= 0)
                                {
                                    return "<i class='glyphicon glyphicon-ok' title='Dar Baixa Produto' style='cursor: pointer' onclick='darBaixaProduto(" + JSON.stringify(data) + ")'></i>";
                                }
                                else
                                {
                                    return moment(data.DataBaixa).format("DD/MM/YYYY HH:mm");
                                }
                            }
                            else
                            {
                                return data.DataBaixa != null ? moment(data.DataBaixa).format("DD/MM/YYYY HH:mm") : "";
                            }
                        },
                        "className": "text-center"
                    },
                    {
                        "data": function (data, type, row) {
                            return data.DataTroca == null ? "" : moment(data.DataTroca).format("DD/MM/YYYY HH:mm");
                        },
                        "className": "text-center"
                    }
                ]
            });

            var tbTipoPagamento = $("#tbTipoPagamento").DataTable({
                "paging": false,
                "ordering": false,
                "info": false,
                "searching": false,
                "language": {
                    "lengthMenu": "Mostrar _MENU_ registros por página",
                    "zeroRecords": "Sem registros a serem exibidos",
                    "info": "Mostrando página _PAGE_ de _PAGES_",
                    "infoEmpty": "Sem registros a serem exibidos",
                    "infoFiltered": "(filtrados de _MAX_ total de registros)"
                },
                "columns":
                [
                    { "data": "TipoPagamentoDao.TipoPagamentoID", "className": "text-center", "visible": false },
                    { "data": "TipoPagamentoDao.Descricao", "className": "text-center" },
                    { "data": "ParcelaDao.Numero", "className": "text-center" },
                    {
                        "data": function (data, type, row) {
                            return Globalize.format(data["ValorPago"], "n2");
                        },
                        "className": "text-center"
                    }
                ]
            });

            $("#btnCadastrar").click(function () {
                window.location.href = "/Pedido/Cadastro";
            });

            $("#btnAlterarDataEntrega").click(function () {
                var pedidoDao = { "PedidoID": $("#lblPedidoID").text() };

                var pedidoProdutoDao = [];
                pedidoProdutoDao.push({ "ProdutoID": $("#lblProdutoID").text(), "DataEntrega": $("#txtDataEntregaNova").val(), "UsuarioEntregaDao.UsuarioID": '@usuarioDao.UsuarioID' });
                pedidoDao.PedidoProdutoDao = pedidoProdutoDao;

                $.ajax({
                    dataType: "json",
                    type: "POST",
                    url: "/Pedido/Atualizar/",
                    data: { pedidoDao: pedidoDao },
                    success: function (data) {
                        if (!data.Sucesso) {
                            alert(data.Mensagem);
                            return;
                        }

                        var idxPedido;
                        $("#tbPedido").DataTable().rows().every(function (rowIdx, tableLoop, rowLoop) {
                            var json = this.data();
                            if (json.PedidoID == data.Pedido.PedidoID) {
                                idxPedido = rowIdx;
                            }
                        });
                        $("#tbPedido").DataTable().row(idxPedido).invalidate().data(data.Pedido).draw();

                        $("#tbProduto").DataTable().clear();
                        $("#tbProduto").DataTable().rows.add(data.Pedido.PedidoProdutoDao).draw();

                        $("#txtDataEntregaNova").val("");
                        $('#modalAlterarDataEntrega').modal('hide');
                    }
                });
            });

            $("#btnFiltro").click(function () {
                $('#modalpedidofiltro').modal('show');
            });

            $("#txtCliente").autocomplete({
                minLength: 3,
                source: function (request, response) {
                    $.getJSON("/Cliente/ListarAutocomplete", { term: request.term }, function (data, status, xhr) {

                        // se não houver cliente cadastrado, retorna mensagem ao usuário
                        if (data == null || data.length <= 0) { data.push({ ClienteID: 0, Nome: "Cliente não cadastrado" }); }

                        response($.map(data, function (cliente) {
                            var nome = cliente.Nome;

                            if (nome == null || nome == "") {
                                nome = cliente.NomeFantasia;
                            }

                            return { label: nome, value: cliente.ClienteID }
                        }));
                    });
                },
                select: function (event, ui) {

                    // apaga a pesquisa do cliente selecionado
                    if (ui.item.label == "Cliente não cadastrado") {
                        ui.item.label = "";
                        ui.item.value = "";
                        return;
                    }

                    $("#ClienteID").val(ui.item.value);

                    ui.item.label = ui.item.label;
                    ui.item.value = ui.item.label;
                },
                change: function (event, ui) {
                    if (ui == null || ui.item == undefined || ui.item == null) {
                        $("#ClienteID").val("");
                    }
                }
            });

            // modal pedido filtro
            $("#btnLimparFiltro").click(function () {
                $("#PedidoID").val("");
                $("#LojaOrigemID").val("");
                $("#LojaID").val("");
                $("#FuncionarioID").val("");
                $("#txtCliente").val("");
                $("#ClienteID").val("");
                $("#DataPedidoInicio").val("");
                $("#DataPedidoFim").val("");
                $("#PedidoStatusID").val("");
            });

            // modal pedido filtro
            $("#btnFiltrarPedido").click(function () {

                var pedidoId = $("#PedidoID").val();
                var lojaOrigemId = $("#LojaOrigemID").val();
                var lojaId = $("#LojaID").val();
                var funcionarioId = $("#FuncionarioID").val();
                var clienteId = $("#ClienteID").val();
                var dataPedidoInicio = $("#DataPedidoInicio").val();
                var dataPedidoFim = $("#DataPedidoFim").val();
                var pedidoStatusId = $("#PedidoStatusID").val();

                if (pedidoId == "" &&
                    lojaOrigemId == "" &&
                    lojaId == "" &&
                    funcionarioId == "" &&
                    clienteId == "" &&
                    dataPedidoInicio == "" &&
                    dataPedidoFim == "" &&
                    pedidoStatusId == "") {
                    alert('Informe algum critério de pesquisa para filtrar.');
                    return;
                }

                $.ajax({
                    dataType: "json",
                    type: "GET",
                    url: "/Pedido/Listar?PedidoID=" + pedidoId + "&ClienteDao[0].ClienteID=" + clienteId + "&ConsultorDao[0].FuncionarioID=" + funcionarioId + "&LojaDao[0].LojaID=" + lojaOrigemId + "&LojaSaidaDao[0].LojaID=" + lojaId + "&PedidoStatusDao[0].PedidoStatusID=" + pedidoStatusId + "&DataPedidoInicio=" + dataPedidoInicio + "&DataPedidoFim=" + dataPedidoFim,
                    success: function (data) {

                        if (!data.Sucesso) {
                            console.info(data.Erro);
                            alert(data.Mensagem);
                            return;
                        }

                        $("#tbPedido").DataTable().clear();
                        $("#tbPedido").DataTable().rows.add(data.Pedidos).draw();

                        $('#modalpedidofiltro').modal('hide');
                    }
                });
            });

        });
    </script>
}
<div class="container">
    <h2><i class="glyphicon glyphicon-list" style="color: #0f3456" title="Pedido"></i> Lista de Pedidos</h2>
    <hr />
    <div class="form-group">
        <div class="row">
            <div class="col-lg-12">
                <button id="btnFiltro" type="button" class="btn btn-warning">Filtros</button>
            </div>            
        </div>
    </div>
    <div class="form-group">
        <div class="row" style="padding: 15px">
            <div class="col-lg-3 bg-success text-center">
                Entregue ou Retirado na Loja
            </div>
            <div class="col-lg-3 bg-warning text-center">
                Previsão de Entrega
            </div>
            <div class="col-lg-3 bg-danger text-center">
                Cancelado
            </div>
            <div class="col-lg-3 bg-secondary text-center">
                Trocado
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="table-responsive">
            <table id="tbPedido" class="table nowrap">
                <thead>
                    <tr>
                        <td class="text-center" style="width: 10%"><b>Nº Pedido</b></td>
                        <td class="text-center" style="width: 20%"><b>Consultor</b></td>
                        <td class="text-center" style="width: 25%"><b>Cliente</b></td>
                        <td class="text-center" style="width: 10%"><b>Data Pedido</b></td>
                        <td class="text-center" style="width: 15%"><b>Loja Origem</b></td>
                        <td class="text-center" style="width: 15%"><b>Loja Saída</b></td>
                        <td class="text-center" style="width: 5%"><b>Ação</b></td>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>
    <div class="form-group">
        <button id="btnCadastrar" type="button" class="btn btn-info">Cadastrar Novo Pedido</button>
    </div>    
    <div class="modal fade" id="modalpedido" tabindex="-1" role="dialog" aria-labelledby="ModalPedido" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Fechar</span></button>
                    <h4 class="modal-title" id="myModalLabel"><span id="lblPedido"></span> <label id="lblPedidoID"></label><label id="lblPedidoStatusID" style="display: none"></label></h4>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-lg-5">
                            Status: <label id="lblPedidoStatus"></label>
                        </div>
                        <div class="col-lg-4">
                            Desconto: <label id="lblTotalDesconto"></label>
                        </div>
                        <div class="col-lg-3">
                            Valor Frete: <label id="lblValorFrete"></label>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-12">
                            Observação: <label id="lblObservacao"></label>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="col-lg-12">
                            <p>Produtos:</p>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="table-responsive">
                                <table id="tbProduto" class="table nowrap" style="width: 100%">
                                    <thead>
                                        <tr>
                                            <td class="text-center" style="width: 5%"><b>ProdutoID</b></td>
                                            <td class="text-center" style="width: 5%"><b>Número</b></td>
                                            <td class="text-center" style="width: 25%"><b>Produto</b></td>
                                            <td class="text-center" style="width: 10%"><b>Medida</b></td>
                                            <td class="text-center" style="width: 10%"><b>Quantidade</b></td>
                                            <td class="text-center" style="width: 20%"><b>Categoria</b></td>
                                            <td class="text-center" style="width: 10%"><b>Data Entrega</b></td>
                                            <td class="text-center" style="width: 10%"><b>Data Baixa</b></td>
                                            <td class="text-center" style="width: 5%"><b>Data Troca</b></td>
                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="col-lg-12">
                            <p>Pagamentos:</p>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="table-responsive">
                                <table id="tbTipoPagamento" class="table nowrap" style="width: 100%">
                                    <thead>
                                        <tr>
                                            <td class="text-center" style="width: 5%"><b>TipoPagamentoID</b></td>
                                            <td class="text-center" style="width: 70%"><b>Descrição</b></td>
                                            <td class="text-center" style="width: 10%"><b>Parcela</b></td>
                                            <td class="text-center" style="width: 15%"><b>Valor Pago</b></td>
                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="text-right">
                                Total Pago: <label id="lblTotalPedido"></label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="modalAlterarDataEntrega" tabindex="-1" role="dialog" aria-labelledby="ModalAlterarDataEntrega" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Fechar</span></button>
                    <h4 class="modal-title" id="myModalLabel">Produto <label id="lblNumero"></label><label id="lblProdutoID" style="display: none"></label></h4>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-lg-4">
                            <label id="_lblDataEntrega" style="vertical-align: sub">Data de Entrega Antiga</label>
                        </div>
                        <div class="col-lg-4">
                            <input id="txtDataEntregaAntiga" class="form-control" disabled="disabled" />
                        </div>
                        <div class="col-lg-4">
                            <input id="txtDataEntregaNova" class="form-control data datepicker" placeholder="Nova Data Entrega" />
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="btnAlterarDataEntrega" type="button" class="btn btn-info">Alterar</button>
                </div>
            </div>
        </div>
    </div>
    @Html.Partial("_ModalPedidoFiltro", Model)
</div>